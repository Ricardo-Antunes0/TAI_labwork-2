In computer science, priority inversion is a scenario in scheduling in which a high priority task is indirectly superseded by a lower priority task effectively inverting the assigned priorities of the tasks. This violates the priority model that high priority tasks can only be prevented from running by higher priority tasks. Inversion occurs when there is a resource contention with a low priority task that is then preempted by a medium priority task. Example Consider two tasks  and , of high and low priority respectively, either of which can acquire exclusive use of a shared resource . If  attempts to acquire  after  has acquired it, then  becomes blocked until  relinquishes the resource. Sharing an exclusive-use resource ( in this case) in a well-designed system typically involves  relinquishing  promptly so that  (a higher priority task) does not stay blocked for excessive periods of time. Despite good design, however, it is possible that a third task  of medium priority (, where  represents the priority for task ) becomes runnable during 's use of . At this point,  being higher in priority than , preempts  (since  does not depend on ), causing  to not be able to relinquish  promptly, in turn causing —the highest priority process—to be unable to run (that is,  suffers unexpected blockage indirectly caused by lower priority tasks like ).
