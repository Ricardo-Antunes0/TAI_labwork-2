In computational complexity theory, NP (nondeterministic polynomial time) is a family of problems for which there is no polynomial-time algorithm that solves them in the conventional sense. NP problems include problems in which a computer must guess a certain value from a set of possible values, problems in which a computer must find the shortest path between two points, and problems in which a computer must find the maximum element of a given set.  NP is not the only problem class that is hard to solve in polynomial time; however, it is one of the most studied problem classes, and several polynomial-time algorithms have been found for solving problems in NP. For many practical purposes, such as search engines, sorting algorithms, and cryptography, it is important to know whether certain problems are in NP or not; however, no polynomial-time algorithm has yet been found for solving all NP problems.
